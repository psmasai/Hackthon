spring.application.name=SpringReact
server.port=8081


# 1.Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/hackathon25oct
spring.datasource.username=root
spring.datasource.password=7488
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 2.JPA + Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect











#--------First time push project from local to github---------------------
# 1. Initialize a new git repo if not already done :  'git init'

# 2. Add remote (replace link with your actual repo URL) :  adds the remote. If already added, it will fail.
# 'git remote add origin https://github.com/<your-username>/<your-repo>.git'

# 3. Remove .gitignore from the repository (optional if you want it gone) :
# 'git rm --cached .gitignore'   Only do this if you want to remove .gitignore from tracking. Normally, you do not remove .gitignore. If your goal is to make Git respect .gitignore, skip this step.


# 4. Stage all other files :  'git add . (to push all files)'  or 'git add filename1,filename2 (to push specific file name)'

# 5. Commit: git commit -m "Initial commit"

# 6. Push to GitHub: git push -u origin main


#---------Next time update project: run these commands only:---------------
# 1. git add . : (To add all files)l
# 2. git add file name :  Adds specific file. (No comma between filenames.
# 3. git commit -m "changes description" 
# 4. git pull   :Pulls remote changes before pushing to avoid conflicts.
# 5. git push   : Pushes our local commits.
#if changed some files directly on github- then also run 'git pull' 
#If someone makes changes directly on GitHub, you must git pull first to merge those changes locally, then git push.


#-------Remove already pushed .gitignore file from github-------
# 1. git rm --cached .gitignore
# 2. git commit -m "Remove .gitignore from tracking"
# 3. git push









